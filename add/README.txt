			Руководство по использованию проекта


		Проект реализует различные алгоритмы замещения виртуальной памяти:

1. FIFO - замещение страницы, загруженной в оперативной памяти(ОП) раньше остальных.
2. LRU - замещение страницы, использованной меньше остальных.
3. OPT - замещение страницы, которая не будет использоваться в дальнейшем/будет использоваться позже всех остальных. 
   Является идеализированной версией алгоритма замещения, неким "эталоном" - так как по сути "должен" предсказывать, 
   какую страницу будет выгоднее всего отгрузить обратно в адресное пространство.

Мы проверяем, корректно ли они работают, выполняя роль процесса, которому нужна очередная страница в ОП, и он обращается к ней с целью получить её.
Программа говорит нам, либо страница уже имеется в ОП, либо страница подгружена из адресного пространства и указывает номер кадра, куда она была загружена.

					ЗАПУСК ПРОЕКТА

Открываем 'Input.txt', предлагается ввести следующие значения:
1. Первое число N - количество страниц процесса в адресном пространстве внешнего носителя.
2. Второе M (через пробел от введённого N) - "объём" ОП, в кадрах. Для теста алгоритмов обычно вводится число, меньшее первого (но не меньше 1!): M < N
3. Перевод строки (клавиша Enter)
4. Далее эмулируем работу "процесса" - запрашиваем страницы, необходимые нам в данный момент, и ожидаем ответа от системы: либо страница загружена
   в ОП, либо страница загружена в какой-то кадр ОП (возможно, предварительно очищенный каким-то алгоритмом). 
   Каким образом эмулируем работу "процесса"?
   Просто вводим в каждой из следующей строк входного файла числа от 1 до N - страница, которая нам нужна в данный момент времени.
   Ввод строк заканчиваем числом "0".

Корректный ввод данных:

|||||||||||||||||||||||||||||||||||||||||||||||
|Input — Блокнот
|||||||||||||||||||||||||||||||||||||||||||||||
| Файл | Правка | Формат | Вид | Справка |
|||||||||||||||||||||||||||||||||||||||||||||||
|8 3
|1
|2
|3
|4
|0

5. Заходим в файл FIFO_LRU_OPT_file_input.py, запускаем его - программа выполнится с кодом, отличным от 0, если входные данные были введены неверно.

				РЕЗУЛЬТАТ РАБОТЫ ПРОЕКТА

Заходим в файл 'Logs.txt', видим в первых строках введенные N, M и последовательность запросов - без последнего "0".
Остальные строки - результат работы проекта, а именно выполнение 3 алгоритмов замещения - FIFO, LRU, OPT c логами работы с введёнными ранее данными.
Интуитивно понятно, что будет записано в этих строках: 
* Последовательность из M чисел - состояние ОП после каждого запроса;
* Page * already uploaded - страница * уже имеется в ОП;
* Page * uploaded to # frame - страница * загружена в # кадр ОП - (# в диапозоне от 0 до M-1 - первому кадру соответствует 0, второму - 1, . . . ,
  последнему - M-1;
* Free frame needed, clearing of # frame in progress...
  Page * uploaded back from # frame to External Media - в данный момент необходим свободный кадр, благодаря текущему алгоритму замещения освбождаем какой-то # кадр,
  страница * отгружается из этого кадра в адресное пространство;
* Строки FIFO, LRU, OPT обозначают текущий алгоритм замещения;
* Frame rewrites by using FIFO/LRU/OPTIMAL: ^ - алгоритм замещения FIFO/LRU/OPT был применен ^ раз.

Пример выходных данных (на основе входных данных, представленных выше):

||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|Logs — Блокнот
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
| Файл | Правка | Формат | Вид | Справка |
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|8 3
|1
|2
|3
|4
|FIFO
|0 0 0 
|Page 1 uploaded to 0 frame
|1 0 0 
|Page 2 uploaded to 1 frame
|1 2 0 
|Page 3 uploaded to 2 frame
|1 2 3 
|Free frame needed, clearing of 0 frame in progress...
|Page 1 uploaded back from 0 frame to External Media
|0 2 3 
|Page 4 uploaded to 0 frame
|4 2 3 
|Frame rewrites by using FIFO: 4
|LRU
|0 0 0 
|Page 1 uploaded to 0 frame
|1 0 0 
|Page 2 uploaded to 1 frame
|1 2 0 
|Page 3 uploaded to 2 frame
|1 2 3 
|Free frame needed, clearing of 0 frame in progress...
|Page 1 uploaded back from 0 frame to External Media
|0 2 3 
|Page 4 uploaded to 0 frame
|4 2 3 
|Frame rewrites by using LRU: 4
|OPTIMAL
|0 0 0 
|Page 1 uploaded to 0 frame
|1 0 0 
|Page 2 uploaded to 1 frame
|1 2 0 
|Page 3 uploaded to 2 frame
|1 2 3 
|Free frame needed, clearing of 0 frame in progress...
|Page 1 uploaded back from 0 frame to External Media
|0 2 3 
|Page 4 uploaded to 0 frame
|4 2 3 
|Frame rewrites by using OPTIMAL: 4
|

Файл 'Output.txt' содержит только количество перезаписей кадров для каждого алгоритма. Чем их меньше - тем, очевидно, эффективнее работает алгоритм.











